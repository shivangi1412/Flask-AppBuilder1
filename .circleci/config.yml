version: 2.1
orbs:
  win: circleci/windows@2.4.0
jobs:

  lint-unit-39: &lint-unit
    docker:
      - image: circleci/python:3.6.1

    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo apt-get update
            sudo apt-get install -y python-dev libldap2-dev libsasl2-dev libssl-dev
            python --version
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            uname -m
            pip --version
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            black --check setup.py flask_appbuilder
            
  test-postgres: 
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install python3-dev
            python3 -m venv venv
            . venv/bin/activate
             sudo apt-get install -y build-essential python3-dev libldap2-dev libsasl2-dev libssl-dev libmysqlclient-dev libpq-dev freetds-bin unixodbc-dev tdsodbc --yes
             python3 -m pip install -U pip 
             python3 setup.py install 
             pip3 install -r requirements.txt
             pip3 install -r requirements-dev.txt
             pip3 install -r requirements-extra.txt
            
            uname -m
            pip --version
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
     
      - run:
          name: test
          command: |
            . venv/bin/activate
            nosetests --stop -v --with-coverage --cover-package=flask_appbuilder flask_appbuilder.tests --ignore-files="test_mongoengine\.py"
      - run:
          name: upload code coverage
          command: |
            bash <(curl -s https://codecov.io/bash) -cF python 
         
  build-medium-amd64:
    machine:
      image: ubuntu-2004:202101-01
   
    working_directory: ~/python-lz4
    steps:      
      - checkout
      - run:
          name: ️️requirements
          command: |
             uname -m 
             sudo apt-get update && sudo apt-get -y install python3 python3-pip 
             sudo apt-get install -y build-essential python3-dev libldap2-dev libsasl2-dev libssl-dev libmysqlclient-dev libpq-dev freetds-bin unixodbc-dev tdsodbc --yes
             python3 -m pip install -U pip 
             python3 setup.py install 
             pip3 install -r requirements.txt
             pip3 install -r requirements-dev.txt
             pip3 install -r requirements-extra.txt
      - run:
          name: ️️test
          command: |
             tox -e py38    
  
  build-medium-arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    working_directory: ~/python-lz4
    steps:
      
      - checkout
      - run:
          name: ️️requirements
          command: |
             uname -m 
             sudo apt-get update && sudo apt-get -y install python3 python3-pip 
             sudo apt-get install -y build-essential python3-dev libldap2-dev libsasl2-dev libssl-dev libmysqlclient-dev libpq-dev unixodbc-dev freetds-bin unixodbc-dev tdsodbc --yes
             python3 -m pip install -U pip 
             python3 setup.py install 
             pip3 install -r requirements.txt
             pip3 install -r requirements-dev.txt
             pip3 install -r requirements-extra.txt
      - run:
          name: ️️test
          command: |
             tox -e py38           
workflows:
 version: 2
 python3.9:
   jobs:
     - lint-unit-39
     - test-postgres
     - build-medium-amd64
     - build-medium-arm64
